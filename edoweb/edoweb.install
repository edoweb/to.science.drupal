<?php
/**
 * Copyright 2013 hbz NRW (http://www.hbz-nrw.de/)
 *
 * This file is part of regal-drupal.
 *
 * regal-drupal is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * regal-drupal is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with regal-drupal.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * @file
 * Install for Edoweb entity - need to create the base table for our entity.
 * This table can have as many columns as you need to keep track of
 * entity-specific data that will not be added via attached fields.
 * The minimum information for the entity to work is an id and an entity name.
 */

/**
 * Implements hook_schema().
 */
function edoweb_schema() {
  $schema = array();

  // The name of the table can be any name we choose. However, namespacing the
  // table with the module name is best practice.
  $schema['edoweb_basic'] = array(
    'description' => 'The base table for our basic entity.',
      'fields' => array(
        'local_id' => array(
          'description' => 'Primary key of the basic entity.',
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        // Allow multiple bundles
        'bundle_type' => array(
          'description' => 'The bundle type',
          'type' => 'text',
          'size' => 'medium',
          'not null' => TRUE
        ),
        // Creation date of the entity
        'created' => array(
          'description' => 'The Unix timestamp of the entity creation time.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        // The ID of the entity in the Edoweb API
        'remote_id' => array(
          'description' => 'The remote id of the entity, can be a URI',
          'type' => 'text',
          'not null' => FALSE,
        ),
      ),
    'primary key' => array('local_id'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 *
 */
function edoweb_install() {
  // Create all the fields we are adding to our entity type.
  // http://api.drupal.org/api/function/field_create_field/7
  foreach (_edoweb_installed_fields() as $field) {
    field_create_field($field);
  }

  // Create all the instances for our fields.
  // http://api.drupal.org/api/function/field_create_instance/7
  foreach (_edoweb_installed_instances() as $instance) {
    $instance['entity_type'] = 'edoweb_basic';
    field_create_instance($instance);
  }

  // Create roles and permissions
  $role_ids = array();
  foreach (_edoweb_installed_roles() as $role_desc) {
    $role = new stdClass();
    $role->name = $role_desc['name'];
    user_role_save($role);
    // Fetch from DB to get role id
    $role = user_role_load_by_name($role->name);
    user_role_grant_permissions($role->rid, _edoweb_installed_permissions());
    $role_ids[$role->rid] = $role->name;
  }

  // Create users
  foreach (_edoweb_installed_users() as $user) {
    $user['roles'] = $role_ids;
    user_save(null, $user);
  }

  // Generate list of available languages
  _edoweb_generate_available_languages(
    dirname(__FILE__) . '/iso639-2.nt',
    drupal_realpath(file_default_scheme() . '://') .  '/available_languages.inc'
  );
}

/**
 * Return a structured array defining the fields created by this content type.
 */
function _edoweb_installed_fields() {
  $t = get_t();
  return array(
    array(
      'field_name' => 'field_edoweb_title',
      'cardinality' => 1,
      'type'        => 'text',
    ),
    array(
      'field_name' => 'field_edoweb_title_other',
      'cardinality' => 1,
      'type'        => 'text',
    ),
    array(
      'field_name' => 'field_edoweb_creator',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'type'        => 'edoweb_ld_reference',
    ),
    array(
      'field_name' => 'field_edoweb_contributor',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'type'        => 'edoweb_ld_reference',
    ),
    array(
      'field_name' => 'field_edoweb_issued',
      'cardinality' => 1,
      'type'        => 'number_integer',
    ),
    array(
      'field_name' => 'field_edoweb_language',
      'cardinality' => 1,
      'default_widget' => 'options_select',
      'type'        => 'list_text',
      'settings' => array(
        'allowed_values_function' => '_edoweb_available_languages',
      ),
    ),
    array(
      'field_name' => 'field_edoweb_edition',
      'cardinality' => 1,
      'type'        => 'text',
    ),
    array(
      'field_name' => 'field_edoweb_publication_place',
      'cardinality' => 1,
      'type'        => 'text',
    ),
    array(
      'field_name' => 'field_edoweb_subject',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      // TODO: Use linked data field
      'type'        => 'text',
    ),
    array(
      'field_name' => 'field_edoweb_publisher',
      'cardinality' => 1,
      'type'        => 'text',
    ),
    array(
      'field_name' => 'field_edoweb_file',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'type'        => 'file',
    ),
    array(
      'field_name' => 'field_edoweb_child',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'type'        => 'entityreference',
      'settings'    => array(
        'target_type' => 'edoweb_basic',
        'handler_settings' => array('target_bundles' => null),
      ),
    ),
    array(
      'field_name' => 'field_edoweb_parent',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'type'        => 'entityreference',
      'settings'    => array(
        'target_type' => 'edoweb_basic',
        'handler_settings' => array('target_bundles' => null),
      ),
    ),
  );
}

/**
 * Return a structured array defining the instances for this content type.
 */
function _edoweb_installed_instances() {
  $t = get_t();
  return array(
    /**
     * Field instances in the monograph bundle
     */
    array(
      'field_name'  => 'field_edoweb_title',
      'label'       => $t('Titel'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_title_other',
      'label'       => $t('Titelzusatz'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_creator',
      'label'       => $t('Autor'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_contributor',
      'label'       => $t('Beteiligte Person'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_issued',
      'label'       => $t('Erscheinungsjahr'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_language',
      'label'       => $t('Sprache'),
      'bundle'      => 'monograph',
      'default_value' => array(array('value' => 'http://id.loc.gov/vocabulary/iso639-2/ger')),
    ),
    array(
      'field_name'  => 'field_edoweb_edition',
      'label'       => $t('Ausgabe'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_publication_place',
      'label'       => $t('Erscheinungsort'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_subject',
      'label'       => $t('Schlagwort'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_publisher',
      'label'       => $t('Verlag'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_file',
      'label'       => $t('Datei'),
      'bundle'      => 'monograph',
      'settings'    => array(
        'file_extensions' => 'pdf',
      ),
    ),
    /**
     * Field instances in the journal bundle
     */
    array(
      'field_name'  => 'field_edoweb_title',
      'label'       => $t('Titel'),
      'bundle'      => 'journal',
    ),
    array(
      'field_name'  => 'field_edoweb_creator',
      'label'       => $t('Autor'),
      'bundle'      => 'journal',
    ),
    array(
      'field_name'  => 'field_edoweb_issued',
      'label'       => $t('Erscheinungsjahr'),
      'bundle'      => 'journal',
    ),
    array(
      'field_name'  => 'field_edoweb_publication_place',
      'label'       => $t('Erscheinungsort'),
      'bundle'      => 'journal',
    ),
    array(
      'field_name'  => 'field_edoweb_language',
      'label'       => $t('Sprache'),
      'bundle'      => 'journal',
      'default_value' => array(array('value' => 'http://id.loc.gov/vocabulary/iso639-2/ger')),
    ),
    array(
      'field_name'  => 'field_edoweb_child',
      'label'       => $t('Child'),
      'bundle'      => 'journal',
      'settings'    => array(
        'target_type' => 'edoweb_basic',
        'handler_settings' => array(
          'target_bundles' => array(
            'volume' => 'volume',
            'issue' => 'issue',
            'article' => 'article',
          ),
        ),
      ),
    ),
    /**
     * Field instances in the volume bundle
     */
    array(
      'field_name'  => 'field_edoweb_parent',
      'label'       => $t('Parent'),
      'bundle'      => 'volume',
      'settings'    => array(
        'target_type' => 'edoweb_basic',
        'handler_settings' => array(
          'target_bundles' => array(
            'journal' => 'journal',
          ),
        ),
      ),
    ),
    array(
      'field_name'  => 'field_edoweb_title',
      'label'       => $t('Titel'),
      'bundle'      => 'volume',
    ),
    array(
      'field_name'  => 'field_edoweb_title_other',
      'label'       => $t('Titelzusatz'),
      'bundle'      => 'volume',
    ),
    array(
      'field_name'  => 'field_edoweb_creator',
      'label'       => $t('Autor'),
      'bundle'      => 'volume',
    ),
    array(
      'field_name'  => 'field_edoweb_contributor',
      'label'       => $t('Beteiligte Person'),
      'bundle'      => 'volume',
    ),
    array(
      'field_name'  => 'field_edoweb_issued',
      'label'       => $t('Erscheinungsjahr'),
      'bundle'      => 'volume',
    ),
    array(
      'field_name'  => 'field_edoweb_language',
      'label'       => $t('Sprache'),
      'bundle'      => 'volume',
      'default_value' => array(array('value' => 'http://id.loc.gov/vocabulary/iso639-2/ger')),
    ),
    array(
      'field_name'  => 'field_edoweb_edition',
      'label'       => $t('Ausgabe'),
      'bundle'      => 'volume',
    ),
    array(
      'field_name'  => 'field_edoweb_publication_place',
      'label'       => $t('Erscheinungsort'),
      'bundle'      => 'volume',
    ),
    array(
      'field_name'  => 'field_edoweb_subject',
      'label'       => $t('Schlagwort'),
      'bundle'      => 'volume',
    ),
    array(
      'field_name'  => 'field_edoweb_publisher',
      'label'       => $t('Verlag'),
      'bundle'      => 'volume',
    ),
    array(
      'field_name'  => 'field_edoweb_file',
      'label'       => $t('Datei'),
      'bundle'      => 'volume',
      'settings'    => array(
        'file_extensions' => 'pdf',
      ),
    ),
    array(
      'field_name'  => 'field_edoweb_child',
      'label'       => $t('Children'),
      'bundle'      => 'volume',
      'settings'    => array(
        'target_type' => 'edoweb_basic',
        'handler_settings' => array(
          'target_bundles' => array(
            'issue' => 'issue',
            'article' => 'article',
          ),
        ),
      ),
    ),
    /**
     * Field instances in the issue bundle
     */
    array(
      'field_name'  => 'field_edoweb_parent',
      'label'       => $t('Parent'),
      'bundle'      => 'issue',
      'settings'    => array(
        'target_type' => 'edoweb_basic',
        'handler_settings' => array(
          'target_bundles' => array(
            'journal' => 'journal',
            'volume' => 'volume',
          ),
        ),
      ),
    ),
    array(
      'field_name'  => 'field_edoweb_title',
      'label'       => $t('Titel'),
      'bundle'      => 'issue',
    ),
    array(
      'field_name'  => 'field_edoweb_issued',
      'label'       => $t('Erscheinungsjahr'),
      'bundle'      => 'issue',
    ),
    array(
      'field_name'  => 'field_edoweb_language',
      'label'       => $t('Sprache'),
      'bundle'      => 'issue',
      'default_value' => array(array('value' => 'http://id.loc.gov/vocabulary/iso639-2/ger')),
    ),
    array(
      'field_name'  => 'field_edoweb_child',
      'label'       => $t('Child'),
      'bundle'      => 'issue',
      'settings'    => array(
        'target_type' => 'edoweb_basic',
        'handler_settings' => array(
          'target_bundles' => array(
            'article' => 'article',
          ),
        ),
      ),
    ),
    /**
     * Field instances in the article bundle
     */
    array(
      'field_name'  => 'field_edoweb_parent',
      'label'       => $t('Parent'),
      'bundle'      => 'article',
      'settings'    => array(
        'target_type' => 'edoweb_basic',
        'handler_settings' => array(
          'target_bundles' => array(
            'journal' => 'journal',
            'volume' => 'volume',
            'issue' => 'issue',
          ),
        ),
      ),
    ),
    array(
      'field_name'  => 'field_edoweb_title',
      'label'       => $t('Titel'),
      'bundle'      => 'article',
    ),
    array(
      'field_name'  => 'field_edoweb_issued',
      'label'       => $t('Erscheinungsjahr'),
      'bundle'      => 'article',
    ),
    array(
      'field_name'  => 'field_edoweb_language',
      'label'       => $t('Sprache'),
      'bundle'      => 'article',
      'default_value' => array(array('value' => 'http://id.loc.gov/vocabulary/iso639-2/ger')),
    ),
  );
}

/**
 * Return a structured array defining the permissions for this content type.
 */
function _edoweb_installed_permissions() {
  return array(
    'view any edoweb_basic entity',
    'edit any edoweb_basic entity',
    'create edoweb_basic entities',
  );
}

/**
 * Return a structured array defining the roles for this content type.
 */
function _edoweb_installed_roles() {
  return array(
    array(
      'name' => 'edoweb_backend_user',
    ),
  );
}

/**
 * Return a structured array defining the roles for this content type.
 */
function _edoweb_installed_users() {
  return array(
    array(
      'name' => 'edoweb',
      'pass' => 'edoweb2013',
      'mail' => 'edoweb@localhost.localdomain',
      'init' => 'edoweb@localhost.localdomain',
      'status' => 1,
    )
  );
}

/**
 * Generate an array containing the available languages from ISO 639-2.
 */
function _edoweb_generate_available_languages($input_file, $output_file) {
  require_once dirname(__FILE__) . '/lib/LibRDF/LibRDF/LibRDF.php';
  LibRDF_LiteralNode::setPlainOutput(true);

  $rdf_model = new LibRDF_Model(new LibRDF_Storage());
  $rdf_data = file_get_contents($input_file);
  $rdf_parser = new LibRDF_Parser('ntriples');
  $rdf_model->loadStatementsFromString($rdf_parser, $rdf_data);
  // Create a SPARQL query
  $query = new LibRDF_Query("
    PREFIX mads:   <http://www.loc.gov/mads/rdf/v1#>
    SELECT ?lang ?label
    WHERE
      {
        ?lang a mads:Language .
        ?lang mads:authoritativeLabel ?label .
        FILTER(langMatches(lang(?label), 'EN')) .
      }
    ORDER BY ?label
  ", null, 'sparql');
  // Execute the query. The results of a SPARQL SELECT provide
  // array access by using the variables used in the query as keys:
  $languages = "<?php\n\nreturn array(\n";
  $results = $query->execute($rdf_model);
  foreach ($results as $result) {
    $languages .= "'" . substr($result['lang'], 1, -1) . "' => t(\"" .  $result['label'] . "\"),\n";
  }
  $languages .= ');';
  file_put_contents($output_file, $languages);
}

/*
 * Implements hook_uninstall().
 *
 * At uninstall time we'll notify field.module that the entity was deleted
 * so that attached fields can be cleaned up.
 */
function edoweb_uninstall() {
  // Delete bundles
  field_attach_delete_bundle('edoweb_basic', 'monograph');
  field_attach_delete_bundle('edoweb_basic', 'journal');
  field_attach_delete_bundle('edoweb_basic', 'volume');
  field_attach_delete_bundle('edoweb_basic', 'issue');
  field_attach_delete_bundle('edoweb_basic', 'article');

  // Delete field instances for now.
  // Check status of http://drupal.org/node/1015846
  $instances = _edoweb_installed_instances();
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // Delete users
  foreach (_edoweb_installed_users() as $user) {
    $account = user_load_by_name($user['name']);
    user_delete($account->uid);
  }

  // Revoke permissions and delete roles
  foreach (_edoweb_installed_roles() as $role_desc) {
    $role = user_role_load_by_name($role_desc['name']);
    user_role_revoke_permissions($role->rid, _edoweb_installed_permissions());
    user_role_delete($role->rid);
  }

}
